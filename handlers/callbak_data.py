import asyncio
import json
import time

print(2)
from aiogram import types

from misc import dp, bot
from .sqlit import change_status,get_username,update_status, change_all
from .sqlit import reg_user, get_username, change_prokladka, get_data_tag
import random

text_dogon = """<b>–ê—è—è–π —è —Å–º–æ—Ç—Ä—é, –∫—Ç–æ-—Ç–æ —Ä–µ—à–∏–ª
–ø–æ—à–∞–ª–∏—Ç—å üòè

–ü–æ—Å–º–æ—Ç—Ä–∏ —Å–Ω–∞—á–∞–ª–∞ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ –≤—Å–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—èüôèüôÉ</b>"""


text_stop = """<b>–î–∞–∂–µ –í–∞–Ω–≥–∞ –Ω–µ –∑–Ω–∞–µ—Ç, <i>–ø–æ—á–µ–º—É —Ç—ã –µ—â—ë –Ω–µ —Å –Ω–∞–º–∏ü§Ø</i> </b>

–Ø –≤–∏–∂—É —Ç—ã –µ—â—ë –Ω–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª(–∞) —Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç, –∞ –≤–µ–¥—å —Ç—ã —Ç–∞–∫ —Ö–æ—Ç–µ–ª(–∞) –Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –≤–∏–¥–∏–º–æ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥–Ω–∞—è –æ—Ç–≥–æ–≤–æ—Ä–∫–∞... 
<b><i>–¢—ã –≤—Å–µ –µ—â–µ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.</i>

–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá</b>
"""

time_flag = 1 # 0 - —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –≥–¥–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã —Ç–∞–π–º.—Å–ª–∏–ø—ã

from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext




content = -1002175079539
reg_user(1,'1')  # –ó–∞–ø—É—Å–∫ –≤ –ë–î
class reg_p(StatesGroup):
    step1 = State()
    step2 = State()
    step3 = State()

async def check_time(id, time1):
    now_time = time.time()
    last_time = get_data_tag(id)

    if (now_time-float(last_time)) < time1:
        await bot.send_message(chat_id=id, text= text_dogon)
        return 0
    else:
        change_prokladka(id, now_time)
        return 1




async def progrev(state, chat_id, call_data, meta):
    markup_dogon = types.InlineKeyboardMarkup()
    bat_a = types.InlineKeyboardButton(text="–ü–†–û–î–û–õ–ñ–ò–¢–¨‚èØ", callback_data = call_data)
    markup_dogon.add(bat_a)

    markup_dogon2 = types.InlineKeyboardMarkup()
    bat_a = types.InlineKeyboardButton(text="–í–û–°–ö–†–ï–°–ò–¢–¨üíÄ", callback_data = call_data)
    markup_dogon2.add(bat_a)

    if time_flag == 1:
        await asyncio.sleep(60)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.send_message(chat_id = chat_id, text = text_stop, reply_markup = markup_dogon)
    else:
        return


    if time_flag == 1:
        await asyncio.sleep(3600)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.copy_message(from_chat_id=content, chat_id = chat_id, message_id = 163, reply_markup=markup_dogon)
    else:
        return

    if time_flag == 1:
        await asyncio.sleep(86400)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.copy_message(from_chat_id=content, chat_id=chat_id, message_id = 165, reply_markup=markup_dogon)
    else:
        return

    if time_flag == 1:
        await asyncio.sleep(86400)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.copy_message(from_chat_id=content, chat_id=chat_id, message_id = 167, reply_markup=markup_dogon2)
    else:
        return



async def progrev2(state, chat_id, call_data, meta):
    markup_dogon = types.InlineKeyboardMarkup()
    bat_a = types.InlineKeyboardButton(text="–ü–†–û–î–û–õ–ñ–ò–¢–¨‚èØ", callback_data = call_data)
    markup_dogon.add(bat_a)

    markup_dogon2 = types.InlineKeyboardMarkup()
    bat_a = types.InlineKeyboardButton(text="–í–û–°–ö–†–ï–°–ò–¢–¨üíÄ", callback_data = call_data)
    markup_dogon2.add(bat_a)

    if time_flag == 1:
        await asyncio.sleep(300)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.send_message(chat_id = chat_id, text = text_stop, reply_markup = markup_dogon)
    else:
        return


    if time_flag == 1:
        await asyncio.sleep(3600)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.copy_message(from_chat_id=content, chat_id = chat_id, message_id = 163, reply_markup=markup_dogon)
    else:
        return

    if time_flag == 1:
        await asyncio.sleep(86400)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.copy_message(from_chat_id=content, chat_id=chat_id, message_id = 165, reply_markup=markup_dogon)
    else:
        return

    if time_flag == 1:
        await asyncio.sleep(86400)
    if ((await state.get_data())[meta]) != 'ready': # –ß–µ–ª–æ–≤–µ–∫ –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞
        await bot.copy_message(from_chat_id=content, chat_id=chat_id, message_id = 167, reply_markup=markup_dogon2)
    else:
        return


@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message, state: FSMContext):
    if len(message.text) == 6:
        reg_user(message.chat.id, '1')  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ë–î
    else:
        reg_user(message.chat.id, message.text[7:])  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ë–î

    update_status(message.chat.id, 0)

    await state.update_data(v00='stop')

    markup = types.InlineKeyboardMarkup()
    bat_a = types.InlineKeyboardButton(text="üöÄ–ü–û–ì–ù–ê–õ–òüöÄ", callback_data = 'go_02')
    markup.add(bat_a)

    q = await bot.copy_message(from_chat_id=content, chat_id=message.chat.id, message_id=186)
    await asyncio.sleep(10)
    await bot.edit_message_reply_markup(message_id=q.message_id, chat_id=message.chat.id, reply_markup=markup)


    await progrev(state = state, chat_id = message.chat.id, call_data = 'go_2', meta = 'v0')



@dp.callback_query_handler(lambda call: True, state = '*')
async def answer_push_inline_button(call, state: FSMContext):
    await bot.answer_callback_query(call.id)
    if call.data == 'go_02':
        update_status(call.message.chat.id, 1)
        await state.update_data(v00='ready')
        await state.update_data(v01='stop')
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='üî•–î–∞–≤–∞–πüî•', callback_data='go_03')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=188)
        await asyncio.sleep(1)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=190)
        await asyncio.sleep(1)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=192)
        await asyncio.sleep(1)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=193, reply_markup=markup)

        await progrev(state=state, chat_id=call.message.chat.id, call_data='go_03', meta='v01')



    if call.data == 'go_03':
        update_status(call.message.chat.id, 2)
        await state.update_data(v01='ready')
        await state.update_data(v02='stop')
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='–ê —á—Ç–æ –∑–∞ –ò–¥–µ—è‚ùì', callback_data='go_04')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=195, reply_markup=markup)
        await progrev(state=state, chat_id=call.message.chat.id, call_data='go_04', meta='v02')


    if call.data == 'go_04':
        update_status(call.message.chat.id, 3)
        await state.update_data(v02='ready')
        await state.update_data(v03='stop')
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='–î–ê–õ–ï–ïüî•', callback_data='go_05')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=197, reply_markup=markup)
        await progrev(state=state, chat_id=call.message.chat.id, call_data='go_05', meta='v03')


    if call.data == 'go_05':
        now_time = time.time()
        change_prokladka(call.message.chat.id, now_time)
        update_status(call.message.chat.id, 4)
        await state.update_data(v03='ready')
        await state.update_data(v04='stop')
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='üí¶–î–ê–õ–¨–®–ïüí¶', callback_data='go_4')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=199,reply_markup=markup)
        await progrev(state=state, chat_id=call.message.chat.id, call_data='go_4', meta='v04')


        #-----------------------



    if call.data == 'go_4':
        now_time = time.time()
        change_prokladka(id, now_time)
        update_status(call.message.chat.id, 5)
        await state.update_data(v04='ready')
        await state.update_data(v3='stop')
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='üß†–¢–ï–°–¢üß†', callback_data='go_5')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=135, reply_markup=markup)
        await progrev2(state=state, chat_id=call.message.chat.id, call_data='go_5', meta='v3')


    if call.data == 'go_5':
        if (await check_time(call.message.chat.id, 40)) == 1:
            update_status(call.message.chat.id, 6)
            await state.update_data(v3='ready')
            await state.update_data(v4='stop')
            markup = types.InlineKeyboardMarkup()
            bat_a1 = types.InlineKeyboardButton(text='1Ô∏è‚É£', callback_data='go_6')
            bat_a2 = types.InlineKeyboardButton(text='2Ô∏è‚É£', callback_data='go_false')
            bat_a3 = types.InlineKeyboardButton(text='3Ô∏è‚É£', callback_data='go_false')
            markup.add(bat_a1, bat_a2, bat_a3)

            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=137, reply_markup=markup)
            await progrev2(state=state, chat_id=call.message.chat.id, call_data='go_6', meta='v4')


    if call.data == 'go_false':

        await bot.send_message(chat_id=call.message.chat.id, text="<b>–ù–µ—Ç, —ç—Ç–æ –Ω–µ –∞—Ä–±–∏—Ç—Ä–∞–∂ —Ç—Ä–∞—Ñ–∏–∫–∞. –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑üôÉ</b>")


    if call.data == 'go_6':
        now_time = time.time()
        change_prokladka(id, now_time)

        update_status(call.message.chat.id, 7)
        await state.update_data(v4='ready')
        await state.update_data(v5='stop')
        markup = types.InlineKeyboardMarkup()
        bat_a1 = types.InlineKeyboardButton(text='üìå–ö–ù–û–ü–û–ß–ö–êüìå', callback_data='go_7')
        markup.add(bat_a1)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=140)
        await asyncio.sleep(1)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=143, reply_markup=markup)

        await progrev2(state=state, chat_id=call.message.chat.id, call_data='go_7', meta='v5')



    if call.data == 'go_7':
        if (await check_time(call.message.chat.id, 40 )) == 1:
            update_status(call.message.chat.id, 8)
            await state.update_data(v5='ready')

            markup = types.InlineKeyboardMarkup()
            bat_a1 = types.InlineKeyboardButton(text='–ú–æ–π –¢–ì‚úÖ', url=f'https://t.me/StealthSystem')
            markup.add(bat_a1)

            markup2 = types.InlineKeyboardMarkup()
            bat_a2 = types.InlineKeyboardButton(text='–û–¢–ó–´–í–´ üí¨‚ú®',url=f'https://t.me/BekirOtzivi')
            markup2.add(bat_a2)

            markup3 = types.InlineKeyboardMarkup()
            markup3.add(bat_a1)
            markup3.add(bat_a2)



            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=146, reply_markup=markup)


            if time_flag == 1:
                await asyncio.sleep(300)
                await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=160,reply_markup=markup2)

            if time_flag == 1:
                await asyncio.sleep(3600)
                await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=170,reply_markup=markup3)


            if time_flag == 1:
                await asyncio.sleep(86400)
                await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=172, reply_markup=markup3)

            if time_flag == 1:
                await asyncio.sleep(86400)
                await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=174, reply_markup=markup3)
